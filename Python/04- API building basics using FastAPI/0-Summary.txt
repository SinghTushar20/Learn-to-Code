Python's Script VS Module VS Package VS Library
    A script is a Python file that’s intended to be run directly.
    A module is a Python file that’s intended to be imported into scripts or other modules. It often defines members like classes, functions, and variables intended to be used in other files that import it.
    A package is a collection of related modules that work together to provide certain functionality.These modules are contained within a folder and can be imported just like any other modules. 
    A library is an umbrella term that loosely means “a bundle of code.” These can have tens or even hundreds of individual modules/packages that can provide a wide range of functionality.

NOTE: To tell python that a certain folder is a package we have to put an __init__.py in it.
Consider package as a folder that contain 1 or more modules.



Creating a Simple API:
    Import FastAPI.
    Create an app instance.
    Write a path operation decorator (like @app.get("/")).
    Write a path operation function (like def root():).
    Run the development server (like uvicorn main:app --reload).

GET is a http method other main methods are POST, PUT, DELETE.

Using parameters in GET request but remember the parameters will be string if you want int then convert it inside the function

NOTE: When we create multiple routes the first match is the only one get executed so ORDER does matter.

Postman is a good tool for giving requests.

A schema is metadata that tells us how our data is structured. Schema is used for validation of data in a http method where the API is provided with a some data like POST request.
    We do this using pydantic module in python.

CRUD application is Create, Read, Update, Delete
    Create -> POST
    Read   -> GET
    Update -> PUT/PATCH
    Delete -> DELETE